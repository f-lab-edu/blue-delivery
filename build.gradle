plugins {
    id 'checkstyle' // linter
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

checkstyle {
    toolVersion = '8.42'
    ignoreFailures = false // 분석결과 error가 발생하면 build 실패
    configFile = file("config/checkstyle/checkstyle.xml") // 작성한 checkstyle.xml 적용 (네이버)
    reportsDir = file("${buildDir}/checkstyle-output") // report 파일 위치 지정
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.session:spring-session-data-redis' // spring session redis
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4'
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16' // log4jdbc (jdbc log)
    implementation 'mysql:mysql-connector-java'
    implementation 'com.h2database:h2:1.4.200'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.0.2' // caffeine cache
    implementation 'net.time4j:time4j-base:5.7' // time4j 음력->양력 변환을 위해 사용

    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

    runtimeOnly 'org.flywaydb:flyway-gradle-plugin:7.9.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

/**
 * https://github.com/gradle/gradle/issues/881
 * IgnoreFailures = false 가 Warn에 적용되도록 수정
 */
tasks.withType(Checkstyle).each { checkstyleTask ->
    checkstyleTask.doLast {
        reports.all { report ->
            def outputFile = report.destination
            if (outputFile.exists() && outputFile.text.contains("<error ")) {
                throw new GradleException("There were checkstyle warnings! For more info check $outputFile")
            }
        }
    }
}