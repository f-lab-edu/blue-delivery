version: '3'

services:
  zookeeper:
    image: zookeeper:3.5
    ports:
      - "2181:2181"
    volumes:
      - ./zookeeper/data:/data
      - ./zookeeper/logs:/datalog

  kafka0:
    image: 'confluentinc/cp-kafka:6.2.0'
    ports:
      - 29092:29092
      - 9092:9092
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_INTERNAL://kafka0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:29092,PLAINTEXT_INTERNAL://kafka0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CREATE_TOPICS: "OrderCreatedEvent:1:1" # Topic:Partition 수:Replica 수
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    volumes:
      - ./kafka/data:/var/lib/kafka/data

  elasticsearch: # ElasticSearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    ports:
      - 9200:9200
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=elasticsearch
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true # Elastic이 사용할 메모리 락
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits: # elasticsearch 프로세스 자원 제한
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./es/data:/usr/share/elasticsearch/data


  kibana: # Kibana
    image: docker.elastic.co/kibana/kibana:7.14.0
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200 # Elastic에 연결하기 위한 URL 및 HOST


  apm: #APM SERVER
    image: docker.elastic.co/apm/apm-server:7.14.0
    ports:
      - 8200:8200
    volumes:
      - ./apm-server.docker.yml:/usr/share/apm-server/apm-server.yml" # 구성한 APM SERVER(apm-server.docker.yml) 마운트
    environment:
      output.elasticsearch.hosts: '["elasticsearch:9200"]'


  db-mysql: # docker run --name db와 같음(컨테이너)
    image: mysql:8.0.25 # 사용할 이미지
    volumes:
      - ./mysql/conf.d:/etc/mysql/conf.d # MySQL 설정 파일 위치
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"

  redis:
    image: redis:6.2.4
    ports:
      - "6379:6379"
    restart: always


  nginx: # load balancer
    image: nginx:1.21.0
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    ports:
      - 8080:80

  blue-delivery1: # app server1
    image: kimstz0/blue-delivery:latest
    ports:
      - "5000:8080"

  blue-delivery2: # app server2
    image: kimstz0/blue-delivery:latest
    ports:
      - "5001:8080"

  blue-delivery3: # app server3
    image: kimstz0/blue-delivery:latest
    ports:
      - "5002:8080"
